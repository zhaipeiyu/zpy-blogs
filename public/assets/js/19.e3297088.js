(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{525:function(l,a,t){"use strict";t.r(a);var i=t(6),s=Object(i.a)({},(function(){var l=this,a=l.$createElement,t=l._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":l.$parent.slotKey}},[t("h2",{attrs:{id:"this"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#this"}},[l._v("#")]),l._v(" This")]),l._v(" "),t("ul",[t("li",[l._v("以函数的形式调用this就是window")]),l._v(" "),t("li",[l._v("以方法的形式调用this就是调用方法的对象")]),l._v(" "),t("li",[l._v("以构造函数的形式调用this是新创建的对象")]),l._v(" "),t("li",[l._v("call/apply/bind调用：fn.call(obj)-----第一个参数指定的对象")]),l._v(" "),t("li",[l._v("Function.call(thisAry,arg1,arg2)  call()的实参需要一个一个传递")]),l._v(" "),t("li",[l._v("Function.apply(thisAry,[argsArray]) apply()将实参保存到一个数组中传递")])]),l._v(" "),t("h2",{attrs:{id:"call-apply-bind-区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#call-apply-bind-区别"}},[l._v("#")]),l._v(" call()/apply()/bind()区别")]),l._v(" "),t("ul",[t("li",[l._v("call(obj, param1, param2)/apply(obj, [[param1, param2])\n"),t("ul",[t("li",[l._v("只是强制指定函数中的this为第一个参数指定的对象")]),l._v(" "),t("li",[l._v("如果函数执行需要传参数, call是依次传递, apply需要封装成数组传递")])])]),l._v(" "),t("li",[l._v("bind(obj)\n"),t("ul",[t("li",[l._v("返回一个新函数, 不会自动执行, 需要手动执行")]),l._v(" "),t("li",[l._v("新函数内部会调用原函数, 且this指定为obj")]),l._v(" "),t("li",[l._v("也就是无论新函数如何执行, 原函数中的this都是obj")])])])])])}),[],!1,null,null,null);a.default=s.exports}}]);